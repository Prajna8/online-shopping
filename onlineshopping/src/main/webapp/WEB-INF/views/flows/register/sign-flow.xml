<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow
           http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd">

	
	<var name="user" class="com.london.shoppingbackend.dto.User"/>
	<var name="billing" class="com.london.shoppingbackend.dto.Address"/>

	<!-- 	returning and adding inside the flow a registerModel instance -->
	
	  <on-start>
				<!-- the result of this init is same as going to be registermodel object of register model.java -->
		<evaluate expression="registerHandler.init()" result="flowScope.registerModel" />
	</on-start> 


	<!-- THIS IS THE START AREA -->
	<view-state id="personal" view="flows/register/signup-personal" model="user">
	<transition on="billing" to="validate" />
	
	 <on-exit>
		<evaluate expression="registerHandler.addUser(flowScope.registerModel, user)" />
	</on-exit> 
	</view-state>
	
	<action-state id="validate">
		<evaluate expression="registerHandler.validateUser(user, messageContext)"></evaluate>
		<transition on="success" to="billing"></transition>
		<transition on="failure" to="personal"></transition>
	</action-state>
	
	
	<!-- so to call this particular view state we will use the id=billing -->
	<view-state id="billing" view="flows/register/signup-billing" model="billing">
	<transition on="personal" to="personal"/>
	<transition on="confirm" to="confirm"/>
	
	 <on-exit>
		<evaluate expression="registerHandler.addBilling(flowScope.registerModel, billing)" />
	</on-exit> 
	
	</view-state>
	
	<view-state id="confirm" view="flows/register/signup-confirm" model="flowScope.registerModel">
	<transition on="personal" to="personal"/>
	<transition on="billing" to="billing" />
	<transition on="submit" to="submit"/>
	</view-state>
	
	<action-state id="submit">
		<evaluate expression="registerHandler.saveAll(flowScope.registerModel)" />
	<!-- this means to end that particular state to make sure we are returning a value-->
		<transition on="success" to="success"/>
	</action-state>
	
	
	
	<!-- End State -->
	<!-- on every stage we have to end the state by clicking on home -->
	<end-state id="home" view="externalRedirect:contextRelative:/"/>
	<end-state id="success" view="flows/register/signup-success" />
	
	

	<!-- GLOBAL TRANSITION -->
	<global-transitions>
			<!-- because by default it is always true so need to changed to false -->
		<transition on="home" to="home" validate="false"/>
	</global-transitions>

</flow>